var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AdvancedLayoutCalculator","category":"page"},{"location":"#AdvancedLayoutCalculator","page":"Home","title":"AdvancedLayoutCalculator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AdvancedLayoutCalculator.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AdvancedLayoutCalculator, TextProcessor]","category":"page"},{"location":"#AdvancedLayoutCalculator.TextProcessor.AbstractPiece","page":"Home","title":"AdvancedLayoutCalculator.TextProcessor.AbstractPiece","text":"AbstractPiece\n\nAn abstract type representing a piece of text.\n\n\n\n\n\n","category":"type"},{"location":"#AdvancedLayoutCalculator.TextProcessor.PString","page":"Home","title":"AdvancedLayoutCalculator.TextProcessor.PString","text":"PString\n\nSpecial type of string that can keep track of things like mods (e.g., shift).\n\n\n\n\n\n","category":"type"},{"location":"#AdvancedLayoutCalculator.TextProcessor.RawPiece","page":"Home","title":"AdvancedLayoutCalculator.TextProcessor.RawPiece","text":"RawPiece\n\nStores n-gram counts of a piece of text. Only accounts for raw characters.\n\njulia> using AdvancedLayoutCalculator.TextProcessor\n\njulia> d = Dict(\"a\" => 10, \"e\" => 4); \n\njulia> RawPiece(d, 15)\nERROR: Sum of 'counts' (14) must equal the 'total' (15)!\n\n\n\n\n\n","category":"type"},{"location":"#AdvancedLayoutCalculator.TextProcessor.getngrams-Tuple{Any}","page":"Home","title":"AdvancedLayoutCalculator.TextProcessor.getngrams","text":"getngrams(::String)\n\nTest thing\n\njulia> using AdvancedLayoutCalculator.TextProcessor\n\njulia> getngrams(\"hello\")\n5\n\n\n\n\n\n","category":"method"},{"location":"#AdvancedLayoutCalculator.TextProcessor.to_pstring-Tuple{String}","page":"Home","title":"AdvancedLayoutCalculator.TextProcessor.to_pstring","text":"to_pstring(::String)\n\nConverts String to PString. Currently only accounts for capital alphas.\n\njulia> using AdvancedLayoutCalculator.TextProcessor\n\njulia> p = to_pstring(\"helLo\")\nPString(Union{Char, Symbol}['h', 'e', 'l', :shift, 'l', 'o'])\n\njulia> to_string(p)\n\"helLo\"\n\n\n\n\n\n","category":"method"},{"location":"#AdvancedLayoutCalculator.TextProcessor.to_string-Tuple{AdvancedLayoutCalculator.TextProcessor.PString}","page":"Home","title":"AdvancedLayoutCalculator.TextProcessor.to_string","text":"to_string(::PString)\n\nConverts PString to String.\n\njulia> using AdvancedLayoutCalculator.TextProcessor\n\njulia> p = PString(['1', 'h', :shift, 'p']);\n\njulia> q = to_string(p)\n\"1hP\"\n\njulia> to_pstring(q)\nPString(Union{Char, Symbol}['1', 'h', :shift, 'p'])\n\n\n\n\n\n","category":"method"}]
}
